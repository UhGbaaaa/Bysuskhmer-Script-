local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==4) then function v36() local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==2) then v48=v32(v45,21,31);v49=((v32(v45,32)==1) and  -1) or 1 ;v43=3;end if (v43==0) then v44=v35();v45=v35();v43=1;end if (v43==3) then if (v48==(0 -0)) then if (v47==0) then return v49 * (0 -0) ;else v48=1;v46=619 -(555 + 64) ;end elseif (v48==(2978 -(857 + 74))) then return ((v47==0) and (v49 * (1/0))) or (v49 * NaN) ;end return v16(v49,v48-1023 ) * (v46 + (v47/(2^52))) ;end if (v43==1) then v46=1;v47=(v32(v45,1,20) * (2^32)) + v44 ;v43=2;end end end v37=nil;function v37(v50) local v51=0;local v52;local v53;while true do if (v51==3) then return v14(v53);end if (1==v51) then v52=v11(v27,v30,(v30 + v50) -1 );v30=v30 + v50 ;v51=2;end if (v51==2) then v53={};for v90=1, #v52 do v53[v90]=v10(v9(v11(v52,v90,v90)));end v51=3;end if (v51==0) then v52=nil;if  not v50 then local v115=0;while true do if (v115==0) then v50=v35();if (v50==0) then return "";end break;end end end v51=1;end end end v29=5;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\226\60","\167\204\18\121"),function(v54) if (v9(v54,2)==79) then v31=v8(v11(v54,1,1));return "";else local v80=0;local v81;while true do if (0==v80) then v81=v10(v8(v54,16));if v31 then local v118=0;local v119;while true do if (v118==0) then v119=v13(v81,v31);v31=nil;v118=1;end if (v118==1) then return v119;end end else return v81;end break;end end end end);v29=1;end if (v29==2) then function v33() local v55=v9(v27,v30,v30);v30=v30 + 1 ;return v55;end v34=nil;function v34() local v56,v57=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v57 * (732 -476)) + v56 ;end v29=3;end if (v29==1) then v32=nil;function v32(v58,v59,v60) if v60 then local v82=0;local v83;while true do if (0==v82) then v83=(v58/(2^(v59-1)))%(2^(((v60-1) -(v59-(2 -1))) + 1)) ;return v83-(v83%1) ;end end else local v84=0;local v85;while true do if (v84==0) then v85=2^(v59-1) ;return (((v58%(v85 + v85))>=v85) and 1) or 0 ;end end end end v33=nil;v29=2;end if (5==v29) then v38=v35;v39=nil;function v39(...) return {...},v20("#",...);end v29=6;end if (v29==7) then function v41(v61,v62,v63) local v64=0;local v65;local v66;local v67;while true do if (v64==1) then v67=v61[3];return function(...) local v92=v65;local v93=v66;local v94=v67;local v95=v39;local v96=1;local v97= -1;local v98={};local v99={...};local v100=v20("#",...) -1 ;local v101={};local v102={};for v116=0,v100 do if (v116>=v94) then v98[v116-v94 ]=v99[v116 + 1 ];else v102[v116]=v99[v116 + 1 ];end end local v103=(v100-v94) + 1 ;local v104;local v105;while true do local v117=0;while true do if (v117==1) then if (v105<=(74 -21)) then if (v105<=26) then if (v105<=12) then if (v105<=5) then if (v105<=(1067 -(68 + 997))) then if (v105<=0) then v102[v104[2]][v102[v104[3]]]=v104[1274 -(226 + 1044) ];elseif (v105>(4 -3)) then local v184=0;local v185;while true do if (v184==0) then v185=v104[2];do return v21(v102,v185,v97);end break;end end elseif (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=3) then v102[v104[2]]=v102[v104[120 -(32 + 85) ]]%v102[v104[4]] ;elseif (v105==4) then v102[v104[2]][v104[3]]=v104[4];else local v188=0;local v189;while true do if (0==v188) then v189=v104[2];v102[v189]=v102[v189](v21(v102,v189 + 1 ,v104[3]));break;end end end elseif (v105<=8) then if (v105<=(6 + 0)) then v102[v104[2]]=v63[v104[1 + 2 ]];elseif (v105>7) then v102[v104[2]]=v102[v104[3]] + v104[961 -(892 + 65) ] ;else local v191=v104[2];v102[v191]=v102[v191]();end elseif (v105<=10) then if (v105>(21 -12)) then local v193=0;local v194;while true do if (v193==0) then v194=v104[2];do return v102[v194](v21(v102,v194 + 1 ,v104[3]));end break;end end else local v195=0;local v196;local v197;while true do if (v195==0) then v196=v104[2];v197={};v195=1;end if (v195==1) then for v456=1, #v101 do local v457=0;local v458;while true do if (v457==0) then v458=v101[v456];for v538=0, #v458 do local v539=0;local v540;local v541;local v542;while true do if (v539==0) then v540=v458[v538];v541=v540[1];v539=1;end if (1==v539) then v542=v540[2];if ((v541==v102) and (v542>=v196)) then local v562=0;while true do if (v562==0) then v197[v542]=v541[v542];v540[1]=v197;break;end end end break;end end end break;end end end break;end end end elseif (v105==(20 -9)) then v102[v104[2]][v104[3]]=v104[4];else v102[v104[2]]= #v102[v104[4 -1 ]];end elseif (v105<=19) then if (v105<=15) then if (v105<=13) then local v147=0;local v148;local v149;while true do if (v147==1) then for v373=v148 + 1 ,v104[4] do v149=v149   .. v102[v373] ;end v102[v104[2]]=v149;break;end if (v147==0) then v148=v104[3];v149=v102[v148];v147=1;end end elseif (v105>14) then v102[v104[2]]();else local v201=v104[2];local v202=v104[354 -(87 + 263) ];local v203=v201 + 2 ;local v204={v102[v201](v102[v201 + 1 ],v102[v203])};for v350=1,v202 do v102[v203 + v350 ]=v204[v350];end local v205=v204[1];if v205 then local v374=0;while true do if (v374==0) then v102[v203]=v205;v96=v104[3];break;end end else v96=v96 + 1 ;end end elseif (v105<=17) then if (v105==16) then local v206=0;local v207;while true do if (v206==0) then v207=v104[2];do return v21(v102,v207,v97);end break;end end elseif (v102[v104[2]]~=v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>18) then local v208=0;local v209;while true do if (0==v208) then v209=v104[2];v102[v209]=v102[v209](v102[v209 + 1 ]);break;end end else local v210=0;local v211;while true do if (v210==0) then v211=v104[2];v102[v211]=v102[v211](v21(v102,v211 + 1 ,v97));break;end end end elseif (v105<=22) then if (v105<=20) then local v150=0;local v151;local v152;local v153;while true do if (0==v150) then v151=v93[v104[3]];v152=nil;v150=1;end if (v150==2) then for v376=1,v104[4] do local v377=0;local v378;while true do if (v377==1) then if (v378[1]==53) then v153[v376-1 ]={v102,v378[3]};else v153[v376-1 ]={v62,v378[3]};end v101[ #v101 + 1 ]=v153;break;end if (v377==0) then v96=v96 + 1 ;v378=v92[v96];v377=1;end end end v102[v104[2]]=v41(v151,v152,v63);break;end if (1==v150) then v153={};v152=v18({},{[v7("\158\202\42\74\84\164\237","\48\193\149\67\36")]=function(v379,v380) local v381=0;local v382;while true do if (0==v381) then v382=v153[v380];return v382[1][v382[2]];end end end,[v7("\15\33\142\29\86\57\16\132\29\89","\33\80\126\224\120")]=function(v383,v384,v385) local v386=0;local v387;while true do if (0==v386) then v387=v153[v384];v387[1][v387[2]]=v385;break;end end end});v150=2;end end elseif (v105==21) then v102[v104[2]]=v102[v104[183 -(67 + 113) ]]%v104[4] ;else local v213=0;local v214;local v215;while true do if (v213==0) then v214=v104[3 + 0 ];v215=v102[v214];v213=1;end if (v213==1) then for v459=v214 + 1 ,v104[4] do v215=v215   .. v102[v459] ;end v102[v104[2]]=v215;break;end end end elseif (v105<=24) then if (v105==(56 -33)) then v102[v104[2 + 0 ]]=v62[v104[3]];else local v218=0;local v219;while true do if (v218==0) then v219=v104[2];v102[v219](v102[v219 + 1 ]);break;end end end elseif (v105==25) then if  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[11 -8 ];end else local v220=0;local v221;while true do if (v220==0) then v221=v104[2];v102[v221](v21(v102,v221 + 1 ,v97));break;end end end elseif (v105<=39) then if (v105<=32) then if (v105<=29) then if (v105<=27) then local v154=0;local v155;local v156;local v157;while true do if (v154==0) then v155=v104[2];v156=v102[v155];v154=1;end if (v154==1) then v157=v102[v155 + 2 ];if (v157>0) then if (v156>v102[v155 + 1 ]) then v96=v104[3];else v102[v155 + 3 ]=v156;end elseif (v156<v102[v155 + 1 ]) then v96=v104[3];else v102[v155 + (955 -(802 + 150)) ]=v156;end break;end end elseif (v105>28) then local v222=0;local v223;while true do if (0==v222) then v223=v102[v104[10 -6 ]];if v223 then v96=v96 + 1 ;else local v497=0;while true do if (v497==0) then v102[v104[2]]=v223;v96=v104[3];break;end end end break;end end else local v224=v104[2];local v225=v104[4];local v226=v224 + 2 ;local v227={v102[v224](v102[v224 + 1 ],v102[v226])};for v358=1,v225 do v102[v226 + v358 ]=v227[v358];end local v228=v227[1];if v228 then local v389=0;while true do if (v389==0) then v102[v226]=v228;v96=v104[3];break;end end else v96=v96 + 1 ;end end elseif (v105<=30) then if (v102[v104[2]]~=v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105==31) then local v230=0;local v231;local v232;local v233;local v234;while true do if (2==v230) then for v460=v231,v97 do local v461=0;while true do if (v461==0) then v234=v234 + (1 -0) ;v102[v460]=v232[v234];break;end end end break;end if (v230==1) then v97=(v233 + v231) -1 ;v234=0;v230=2;end if (v230==0) then v231=v104[2];v232,v233=v95(v102[v231](v102[v231 + 1 ]));v230=1;end end else v102[v104[2 + 0 ]]=v41(v93[v104[3]],nil,v63);end elseif (v105<=(1032 -(915 + 82))) then if (v105<=33) then for v180=v104[2],v104[3] do v102[v180]=nil;end elseif (v105==34) then v102[v104[2]][v104[3]]=v102[v104[11 -7 ]];else local v238=0;local v239;while true do if (0==v238) then v239=v104[2];v102[v239](v21(v102,v239 + 1 ,v104[3]));break;end end end elseif (v105<=37) then if (v105>36) then local v240=0;local v241;local v242;local v243;local v244;while true do if (v240==2) then for v462=v241,v97 do local v463=0;while true do if (v463==0) then v244=v244 + 1 ;v102[v462]=v242[v244];break;end end end break;end if (v240==1) then v97=(v243 + v241) -1 ;v244=0;v240=2;end if (v240==0) then v241=v104[2];v242,v243=v95(v102[v241](v21(v102,v241 + 1 ,v97)));v240=1;end end else local v245=0;local v246;local v247;local v248;while true do if (v245==0) then v246=v104[2];v247={v102[v246](v102[v246 + 1 ])};v245=1;end if (v245==1) then v248=0 + 0 ;for v464=v246,v104[4] do local v465=0;while true do if (v465==0) then v248=v248 + 1 ;v102[v464]=v247[v248];break;end end end break;end end end elseif (v105==38) then local v249=0;local v250;local v251;local v252;while true do if (0==v249) then v250=v104[2];v251=v102[v250];v249=1;end if (1==v249) then v252=v102[v250 + 2 ];if (v252>(0 -0)) then if (v251>v102[v250 + 1 ]) then v96=v104[3];else v102[v250 + 3 ]=v251;end elseif (v251<v102[v250 + 1 ]) then v96=v104[3];else v102[v250 + 3 ]=v251;end break;end end else v102[v104[1189 -(1069 + 118) ]]=v102[v104[3]];end elseif (v105<=46) then if (v105<=42) then if (v105<=40) then if (v104[2]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>41) then local v256=0;local v257;while true do if (v256==0) then v257=v102[v104[4]];if v257 then v96=v96 + 1 ;else local v500=0;while true do if (v500==0) then v102[v104[2]]=v257;v96=v104[3];break;end end end break;end end else v62[v104[3]]=v102[v104[2]];end elseif (v105<=44) then if (v105>43) then local v260=0;local v261;while true do if (v260==0) then v261=v104[2];v102[v261](v21(v102,v261 + 1 ,v97));break;end end else local v262=0;local v263;while true do if (v262==0) then v263=v104[4 -2 ];v102[v263](v21(v102,v263 + 1 ,v104[3]));break;end end end elseif (v105>45) then local v264=v104[2];do return v102[v264](v21(v102,v264 + 1 ,v104[3]));end else local v265=v104[2];local v266=v102[v104[3]];v102[v265 + 1 ]=v266;v102[v265]=v266[v104[4]];end elseif (v105<=49) then if (v105<=47) then v102[v104[2]]=v104[6 -3 ];elseif (v105==48) then local v270=0;local v271;local v272;while true do if (v270==1) then for v466=v271 + 1 ,v97 do v15(v272,v102[v466]);end break;end if (v270==0) then v271=v104[2];v272=v102[v271];v270=1;end end elseif (v102[v104[2]]==v102[v104[1 + 3 ]]) then v96=v96 + (1 -0) ;else v96=v104[3];end elseif (v105<=51) then if (v105==50) then local v273=0;local v274;local v275;local v276;local v277;while true do if (v273==1) then v97=(v276 + v274) -1 ;v277=0;v273=2;end if (0==v273) then v274=v104[2 + 0 ];v275,v276=v95(v102[v274](v21(v102,v274 + 1 ,v97)));v273=1;end if (2==v273) then for v467=v274,v97 do local v468=0;while true do if (v468==0) then v277=v277 + 1 ;v102[v467]=v275[v277];break;end end end break;end end else local v278=0;local v279;while true do if (v278==0) then v279=v104[2];v102[v279]=v102[v279](v102[v279 + 1 ]);break;end end end elseif (v105==52) then v102[v104[2]][v102[v104[3]]]=v104[4];else v102[v104[2]]=v102[v104[3]];end elseif (v105<=80) then if (v105<=66) then if (v105<=(850 -(368 + 423))) then if (v105<=56) then if (v105<=(169 -115)) then local v160=v104[20 -(10 + 8) ];local v161,v162=v95(v102[v160](v102[v160 + 1 ]));v97=(v162 + v160) -(3 -2) ;local v163=442 -(416 + 26) ;for v182=v160,v97 do local v183=0;while true do if (v183==0) then v163=v163 + 1 ;v102[v182]=v161[v163];break;end end end elseif (v105==55) then v102[v104[2]]=v102[v104[3]] * v102[v104[4]] ;else v102[v104[2]]=v63[v104[3]];end elseif (v105<=57) then local v164=0;local v165;local v166;local v167;local v168;while true do if (v164==1) then v97=(v167 + v165) -1 ;v168=0;v164=2;end if (v164==0) then v165=v104[2];v166,v167=v95(v102[v165](v21(v102,v165 + 1 ,v104[3])));v164=1;end if (v164==2) then for v393=v165,v97 do local v394=0;while true do if (v394==0) then v168=v168 + 1 ;v102[v393]=v166[v168];break;end end end break;end end elseif (v105==58) then v102[v104[2]]={};else local v288=0;local v289;local v290;local v291;while true do if (v288==0) then v289=v93[v104[9 -6 ]];v290=nil;v288=1;end if (v288==2) then for v469=1,v104[4] do local v470=0;local v471;while true do if (v470==0) then v96=v96 + 1 ;v471=v92[v96];v470=1;end if (v470==1) then if (v471[1 -0 ]==53) then v291[v469-1 ]={v102,v471[3]};else v291[v469-(439 -(145 + 293)) ]={v62,v471[3]};end v101[ #v101 + 1 ]=v291;break;end end end v102[v104[2]]=v41(v289,v290,v63);break;end if (v288==1) then v291={};v290=v18({},{[v7("\211\151\10\202\88\233\176","\60\140\200\99\164")]=function(v472,v473) local v474=0;local v475;while true do if (v474==0) then v475=v291[v473];return v475[1][v475[2]];end end end,[v7("\184\203\10\35\181\142\250\0\35\186","\194\231\148\100\70")]=function(v476,v477,v478) local v479=0;local v480;while true do if (v479==0) then v480=v291[v477];v480[1 + 0 ][v480[2]]=v478;break;end end end});v288=2;end end end elseif (v105<=62) then if (v105<=60) then v102[v104[432 -(44 + 386) ]]();elseif (v105>61) then v102[v104[2]]=v41(v93[v104[3]],nil,v63);elseif v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=64) then if (v105==63) then v102[v104[2]]=v104[3] + v102[v104[4]] ;else for v362=v104[2],v104[3] do v102[v362]=nil;end end elseif (v105==65) then v102[v104[1488 -(998 + 488) ]]=v102[v104[3]]%v102[v104[4]] ;else v102[v104[2]]=v102[v104[3]][v104[2 + 2 ]];end elseif (v105<=73) then if (v105<=69) then if (v105<=(55 + 12)) then local v169=0;local v170;local v171;local v172;while true do if (v169==1) then v172=v102[v170] + v171 ;v102[v170]=v172;v169=2;end if (v169==0) then v170=v104[2];v171=v102[v170 + 2 ];v169=1;end if (v169==2) then if (v171>(772 -(201 + 571))) then if (v172<=v102[v170 + 1 ]) then v96=v104[3];v102[v170 + 3 ]=v172;end elseif (v172>=v102[v170 + 1 ]) then local v505=0;while true do if (v505==0) then v96=v104[3];v102[v170 + (1141 -(116 + 1022)) ]=v172;break;end end end break;end end elseif (v105==68) then local v297=0;local v298;local v299;while true do if (v297==0) then v298=v104[2];v299=v102[v104[3]];v297=1;end if (1==v297) then v102[v298 + 1 ]=v299;v102[v298]=v299[v104[16 -12 ]];break;end end else local v300=0;local v301;local v302;local v303;while true do if (v300==0) then v301=v104[2];v302={v102[v301](v102[v301 + 1 + 0 ])};v300=1;end if (v300==1) then v303=0;for v481=v301,v104[4] do local v482=0;while true do if (v482==0) then v303=v303 + 1 ;v102[v481]=v302[v303];break;end end end break;end end end elseif (v105<=71) then if (v105==70) then local v304=0;local v305;local v306;local v307;while true do if (v304==0) then v305=v104[2];v306=v102[v305 + 2 ];v304=1;end if (v304==1) then v307=v102[v305] + v306 ;v102[v305]=v307;v304=2;end if (v304==2) then if (v306>0) then if (v307<=v102[v305 + 1 ]) then local v534=0;while true do if (v534==0) then v96=v104[10 -7 ];v102[v305 + 3 ]=v307;break;end end end elseif (v307>=v102[v305 + 1 ]) then local v535=0;while true do if (v535==0) then v96=v104[3];v102[v305 + (10 -7) ]=v307;break;end end end break;end end else local v308=0;local v309;local v310;local v311;local v312;while true do if (v308==1) then v97=(v311 + v309) -1 ;v312=0;v308=2;end if (v308==2) then for v483=v309,v97 do local v484=0;while true do if (0==v484) then v312=v312 + 1 ;v102[v483]=v310[v312];break;end end end break;end if (v308==0) then v309=v104[2];v310,v311=v95(v102[v309](v21(v102,v309 + 1 ,v104[3])));v308=1;end end end elseif (v105>72) then v102[v104[2]]=v102[v104[862 -(814 + 45) ]]%v104[4] ;else v102[v104[2]][v104[3]]=v102[v104[4]];end elseif (v105<=76) then if (v105<=74) then local v173=0;local v174;local v175;while true do if (v173==0) then v174=v104[4 -2 ];v175={};v173=1;end if (v173==1) then for v396=1, #v101 do local v397=0;local v398;while true do if (v397==0) then v398=v101[v396];for v507=0, #v398 do local v508=0;local v509;local v510;local v511;while true do if (v508==0) then v509=v398[v507];v510=v509[1];v508=1;end if (1==v508) then v511=v509[2];if ((v510==v102) and (v511>=v174)) then local v561=0;while true do if (v561==0) then v175[v511]=v510[v511];v509[1]=v175;break;end end end break;end end end break;end end end break;end end elseif (v105==75) then v102[v104[1 + 1 ]]=v104[3]~=0 ;elseif (v102[v104[2]]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=(28 + 50)) then if (v105>77) then v102[v104[2]]=v104[3];elseif (v104[2]<v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>79) then v102[v104[2]]=v104[3] + v102[v104[4]] ;elseif v102[v104[2]] then v96=v96 + (886 -(261 + 624)) ;else v96=v104[3];end elseif (v105<=93) then if (v105<=86) then if (v105<=83) then if (v105<=81) then do return;end elseif (v105==82) then v102[v104[2]]=v102[v104[3]] * v102[v104[6 -2 ]] ;elseif (v104[2]<v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=84) then if (v102[v104[2]]<v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105==85) then v96=v104[3];else v62[v104[3]]=v102[v104[2]];end elseif (v105<=89) then if (v105<=87) then v102[v104[2]]=v104[3]~=0 ;elseif (v105>88) then do return;end elseif (v102[v104[1082 -(1020 + 60) ]]<v102[v104[1427 -(630 + 793) ]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=91) then if (v105>90) then v102[v104[6 -4 ]]=v102[v104[3]] + v104[4] ;elseif  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>92) then v102[v104[2]][v102[v104[3]]]=v102[v104[4]];else v102[v104[2]]=v102[v104[3]][v104[4]];end elseif (v105<=(473 -373)) then if (v105<=96) then if (v105<=94) then if (v102[v104[2]]==v104[2 + 2 ]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105==95) then v102[v104[6 -4 ]]={};else local v332=0;local v333;while true do if (v332==0) then v333=v104[1749 -(760 + 987) ];v102[v333]=v102[v333](v21(v102,v333 + 1 ,v97));break;end end end elseif (v105<=98) then if (v105==97) then v102[v104[2]]=v62[v104[3]];else local v336=0;local v337;while true do if (v336==0) then v337=v104[2];v102[v337]=v102[v337](v21(v102,v337 + (1914 -(1789 + 124)) ,v104[3]));break;end end end elseif (v105>(865 -(745 + 21))) then do return v102[v104[2]]();end else v96=v104[3];end elseif (v105<=(36 + 67)) then if (v105<=101) then local v177=0;local v178;while true do if (v177==0) then v178=v104[2];v102[v178]=v102[v178]();break;end end elseif (v105>102) then do return v102[v104[2]]();end elseif (v104[5 -3 ]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=(411 -306)) then if (v105==(1 + 103)) then v102[v104[2]]= #v102[v104[3]];else local v340=0;local v341;while true do if (0==v340) then v341=v104[2];v102[v341](v102[v341 + 1 ]);break;end end end elseif (v105>(84 + 22)) then v102[v104[2]][v102[v104[1058 -(87 + 968) ]]]=v102[v104[4]];else local v344=0;local v345;local v346;while true do if (v344==1) then for v485=v345 + 1 ,v97 do v15(v346,v102[v485]);end break;end if (v344==0) then v345=v104[2];v346=v102[v345];v344=1;end end end v96=v96 + 1 ;break;end if (0==v117) then v104=v92[v96];v105=v104[1];v117=1;end end end end;end if (0==v64) then v65=v61[1];v66=v61[2];v64=1;end end end return v41(v40(),{},v28)(...);end if (v29==6) then v40=nil;function v40() local v68=0;local v69;local v70;local v71;local v72;local v73;local v74;while true do if (v68==1) then v73=v35();v74={};for v106=1,v73 do local v107=v33();local v108;if (v107==1) then v108=v33()~=0 ;elseif (v107==(929 -(214 + 713))) then v108=v36();elseif (v107==(1 + 2)) then v108=v37();end v74[v106]=v108;end v72[3]=v33();v68=2;end if (2==v68) then for v110=1,v35() do local v111=0;local v112;while true do if (v111==0) then v112=v33();if (v32(v112,1 + 0 ,1)==0) then local v126=0;local v127;local v128;local v129;while true do if (v126==0) then v127=v32(v112,2,3);v128=v32(v112,4,6);v126=1;end if (v126==1) then v129={v34(),v34(),nil,nil};if (v127==0) then local v131=0;while true do if (v131==0) then v129[3]=v34();v129[4]=v34();break;end end elseif (v127==1) then v129[3]=v35();elseif (v127==2) then v129[3]=v35() -(2^16) ;elseif (v127==3) then local v179=0;while true do if (v179==0) then v129[880 -(282 + 595) ]=v35() -(2^16) ;v129[4]=v34();break;end end end v126=2;end if (v126==2) then if (v32(v128,1,1)==1) then v129[1639 -(1523 + 114) ]=v74[v129[2]];end if (v32(v128,2,2)==1) then v129[3]=v74[v129[3]];end v126=3;end if (v126==3) then if (v32(v128,3,3)==1) then v129[4 + 0 ]=v74[v129[4]];end v69[v110]=v129;break;end end end break;end end end for v113=1,v35() do v70[v113-1 ]=v40();end return v72;end if (v68==0) then v69={};v70={};v71={};v72={v69,v70,nil,v71};v68=1;end end end v41=nil;v29=7;end if (v29==3) then v35=nil;function v35() local v75=0;local v76;local v77;local v78;local v79;while true do if (v75==0) then v76,v77,v78,v79=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v75=1;end if (v75==1) then return (v79 * 16777216) + (v78 * 65536) + (v77 * 256) + v76 ;end end end v36=nil;v29=4;end end end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--
