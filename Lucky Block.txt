local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==4) then function v36() local v43=v35();local v44=v35();local v45=1;local v46=(v32(v44,1,38 -18 ) * (2^32)) + v43 ;local v47=v32(v44,21,31);local v48=((v32(v44,32)==1) and  -1) or 1 ;if (v47==0) then if (v46==0) then return v48 * 0 ;else local v103=0;while true do if (v103==0) then v47=1;v45=0;break;end end end elseif (v47==2047) then return ((v46==0) and (v48 * (1/(0 -0)))) or (v48 * NaN) ;end return v16(v48,v47-1023 ) * (v45 + (v46/((621 -(555 + 64))^52))) ;end v37=nil;function v37(v49) local v50=0;local v51;local v52;while true do if (v50==2) then v52={};for v104=1, #v51 do v52[v104]=v10(v9(v11(v51,v104,v104)));end v50=3;end if (v50==3) then return v14(v52);end if (v50==1) then v51=v11(v27,v30,(v30 + v49) -(932 -(857 + 74)) );v30=v30 + v49 ;v50=2;end if (0==v50) then v51=nil;if  not v49 then local v118=0;while true do if (0==v118) then v49=v35();if (v49==0) then return "";end break;end end end v50=1;end end end v29=5;end if (1==v29) then v32=nil;function v32(v53,v54,v55) if v55 then local v94=0;local v95;while true do if (v94==0) then v95=(v53/(2^(v54-1)))%(2^(((v55-1) -(v54-1)) + 1)) ;return v95-(v95%1) ;end end else local v96=0;local v97;while true do if (v96==0) then v97=2^(v54-1) ;return (((v53%(v97 + v97))>=v97) and 1) or 0 ;end end end end v33=nil;v29=2;end if (v29==6) then v40=nil;function v40() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==1) then v61=v35();v62={};for v106=1,v61 do local v107=v33();local v108;if (v107==1) then v108=v33()~=0 ;elseif (v107==2) then v108=v36();elseif (v107==(571 -(367 + 201))) then v108=v37();end v62[v106]=v108;end v60[3]=v33();v56=2;end if (v56==0) then v57={};v58={};v59={};v60={v57,v58,nil,v59};v56=1;end if (v56==2) then for v110=1,v35() do local v111=v33();if (v32(v111,928 -(214 + 713) ,1)==0) then local v121=v32(v111,2,3);local v122=v32(v111,4,6);local v123={v34(),v34(),nil,nil};if (v121==0) then v123[3]=v34();v123[2 + 2 ]=v34();elseif (v121==1) then v123[3]=v35();elseif (v121==2) then v123[1 + 2 ]=v35() -(2^16) ;elseif (v121==3) then local v137=0;while true do if (0==v137) then v123[3]=v35() -(2^16) ;v123[4]=v34();break;end end end if (v32(v122,1,1)==1) then v123[2]=v62[v123[2]];end if (v32(v122,2,2)==1) then v123[880 -(282 + 595) ]=v62[v123[3]];end if (v32(v122,3,1640 -(1523 + 114) )==1) then v123[4]=v62[v123[4 + 0 ]];end v57[v110]=v123;end end for v112=1,v35() do v58[v112-(1 -0) ]=v40();end return v60;end end end v41=nil;v29=7;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\143\149","\218\161\187\128"),function(v63) if (v9(v63,2)==79) then v31=v8(v11(v63,1,1));return "";else local v98=0;local v99;while true do if (v98==0) then v99=v10(v8(v63,49 -33 ));if v31 then local v125=0;local v126;while true do if (v125==1) then return v126;end if (0==v125) then v126=v13(v99,v31);v31=nil;v125=1;end end else return v99;end break;end end end end);v29=1;end if (v29==3) then v35=nil;function v35() local v64=0;local v65;local v66;local v67;local v68;while true do if (v64==0) then v65,v66,v67,v68=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v64=1;end if (v64==1) then return (v68 * 16777216) + (v67 * 65536) + (v66 * 256) + v65 ;end end end v36=nil;v29=4;end if (5==v29) then v38=v35;v39=nil;function v39(...) return {...},v20("#",...);end v29=6;end if (7==v29) then function v41(v69,v70,v71) local v72=v69[1];local v73=v69[2];local v74=v69[3];return function(...) local v80=v72;local v81=v73;local v82=v74;local v83=v39;local v84=1066 -(68 + 997) ;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v100=0,v88 do if (v100>=v82) then v86[v100-v82 ]=v87[v100 + 1 ];else v90[v100]=v87[v100 + 1 ];end end local v91=(v88-v82) + (1271 -(226 + 1044)) ;local v92;local v93;while true do local v101=0;while true do if (0==v101) then v92=v80[v84];v93=v92[1];v101=1;end if (v101==1) then if (v93<=38) then if (v93<=(78 -60)) then if (v93<=8) then if (v93<=3) then if (v93<=1) then if (v93>0) then local v140=0;local v141;local v142;while true do if (0==v140) then v141=v92[2];v142=v90[v92[3]];v140=1;end if (v140==1) then v90[v141 + 1 ]=v142;v90[v141]=v142[v92[4]];break;end end elseif v90[v92[119 -(32 + 85) ]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>2) then local v143=v92[2];v90[v143]=v90[v143](v21(v90,v143 + 1 ,v92[3]));else for v235=v92[2],v92[3] do v90[v235]=nil;end end elseif (v93<=5) then if (v93>4) then local v145=v92[2];local v146,v147=v83(v90[v145](v21(v90,v145 + 1 ,v92[3])));v85=(v147 + v145) -1 ;local v148=0;for v237=v145,v85 do v148=v148 + 1 + 0 ;v90[v237]=v146[v148];end else local v149=0;local v150;local v151;local v152;local v153;while true do if (v149==2) then for v346=v150,v85 do local v347=0;while true do if (v347==0) then v153=v153 + 1 ;v90[v346]=v151[v153];break;end end end break;end if (v149==1) then v85=(v152 + v150) -1 ;v153=0;v149=2;end if (0==v149) then v150=v92[2];v151,v152=v83(v90[v150](v21(v90,v150 + 1 ,v92[3])));v149=1;end end end elseif (v93<=6) then v90[v92[2]]=v70[v92[3]];elseif (v93==7) then v90[v92[2]]=v41(v81[v92[3]],nil,v71);else do return;end end elseif (v93<=13) then if (v93<=10) then if (v93==9) then v90[v92[2]]=v90[v92[3]];else for v240=v92[2],v92[3] do v90[v240]=nil;end end elseif (v93<=(3 + 8)) then v90[v92[959 -(892 + 65) ]]=v90[v92[3]]%v90[v92[4]] ;elseif (v93>12) then do return v90[v92[2]]();end else v90[v92[2]]={};end elseif (v93<=15) then if (v93>14) then local v159=0;local v160;while true do if (v159==0) then v160=v92[2];v90[v160]=v90[v160](v21(v90,v160 + 1 ,v92[3]));break;end end else local v161=0;local v162;while true do if (v161==0) then v162=v92[2];v90[v162](v90[v162 + 1 ]);break;end end end elseif (v93<=16) then local v163=0;local v164;while true do if (v163==0) then v164=v92[2];v90[v164]=v90[v164](v21(v90,v164 + 1 ,v85));break;end end elseif (v93==17) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else local v258=0;local v259;local v260;while true do if (v258==0) then v259=v92[2];v260=v90[v259];v258=1;end if (v258==1) then for v382=v259 + (2 -1) ,v85 do v15(v260,v90[v382]);end break;end end end elseif (v93<=28) then if (v93<=(42 -19)) then if (v93<=20) then if (v93==19) then v90[v92[2]]=v70[v92[3]];else v90[v92[2]]=v41(v81[v92[3]],nil,v71);end elseif (v93<=21) then local v168=0;local v169;while true do if (v168==0) then v169=v92[2];v90[v169](v21(v90,v169 + 1 ,v92[3]));break;end end elseif (v93>22) then v90[v92[2]]=v90[v92[3]] + v92[7 -3 ] ;else local v262=0;local v263;while true do if (v262==0) then v263=v92[2];v90[v263]=v90[v263]();break;end end end elseif (v93<=25) then if (v93>24) then v90[v92[2]]= #v90[v92[3]];else v90[v92[352 -(87 + 263) ]]=v90[v92[3]]%v92[4] ;end elseif (v93<=26) then local v172=0;local v173;local v174;local v175;while true do if (1==v172) then v175=v90[v173] + v174 ;v90[v173]=v175;v172=2;end if (v172==2) then if (v174>0) then if (v175<=v90[v173 + 1 ]) then local v401=0;while true do if (v401==0) then v84=v92[3];v90[v173 + 3 ]=v175;break;end end end elseif (v175>=v90[v173 + 1 ]) then local v402=0;while true do if (v402==0) then v84=v92[3];v90[v173 + 3 ]=v175;break;end end end break;end if (v172==0) then v173=v92[2];v174=v90[v173 + 2 ];v172=1;end end elseif (v93>27) then local v264=v92[182 -(67 + 113) ];local v265=v90[v264 + 2 ];local v266=v90[v264] + v265 ;v90[v264]=v266;if (v265>0) then if (v266<=v90[v264 + 1 ]) then local v383=0;while true do if (0==v383) then v84=v92[3];v90[v264 + 3 + 0 ]=v266;break;end end end elseif (v266>=v90[v264 + 1 ]) then local v384=0;while true do if (v384==0) then v84=v92[3];v90[v264 + 3 ]=v266;break;end end end else local v268=v92[2];local v269,v270=v83(v90[v268](v21(v90,v268 + 1 ,v85)));v85=(v270 + v268) -1 ;local v271=0;for v320=v268,v85 do local v321=0;while true do if (0==v321) then v271=v271 + 1 ;v90[v320]=v269[v271];break;end end end end elseif (v93<=33) then if (v93<=30) then if (v93==29) then if  not v90[v92[2]] then v84=v84 + (2 -1) ;else v84=v92[3];end else v90[v92[2]][v92[3 + 0 ]]=v92[4];end elseif (v93<=31) then local v178=0;local v179;local v180;local v181;while true do if (v178==0) then v179=v92[2];v180=v90[v179];v178=1;end if (v178==1) then v181=v90[v179 + 2 ];if (v181>0) then if (v180>v90[v179 + 1 ]) then v84=v92[11 -8 ];else v90[v179 + 3 ]=v180;end elseif (v180<v90[v179 + 1 ]) then v84=v92[3];else v90[v179 + (955 -(802 + 150)) ]=v180;end break;end end elseif (v93==32) then v84=v92[3];else v90[v92[2]]=v71[v92[3]];end elseif (v93<=35) then if (v93==34) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v182=v81[v92[3]];local v183;local v184={};v183=v18({},{[v7("\67\118\210\65\1\116\100","\17\28\41\187\47\101")]=function(v242,v243) local v244=0;local v245;while true do if (v244==0) then v245=v184[v243];return v245[1][v245[2]];end end end,[v7("\13\57\52\187\22\59\8\62\187\25","\97\82\102\90\222")]=function(v246,v247,v248) local v249=v184[v247];v249[1][v249[2]]=v248;end});for v251=1,v92[4] do local v252=0;local v253;while true do if (v252==1) then if (v253[2 -1 ]==9) then v184[v251-1 ]={v90,v253[3]};else v184[v251-1 ]={v70,v253[3]};end v89[ #v89 + 1 ]=v184;break;end if (v252==0) then v84=v84 + 1 ;v253=v80[v84];v252=1;end end end v90[v92[2]]=v41(v182,v183,v71);end elseif (v93<=(65 -29)) then do return v90[v92[2]]();end elseif (v93==37) then local v277=0;local v278;local v279;while true do if (v277==1) then for v389=v278 + 1 ,v85 do v15(v279,v90[v389]);end break;end if (v277==0) then v278=v92[2];v279=v90[v278];v277=1;end end elseif (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=57) then if (v93<=47) then if (v93<=(31 + 11)) then if (v93<=40) then if (v93>(1036 -(915 + 82))) then local v186=0;local v187;while true do if (v186==0) then v187=v92[2];v90[v187](v21(v90,v187 + 1 ,v85));break;end end else local v188=0;local v189;local v190;local v191;while true do if (v188==2) then for v352=1,v92[4] do v84=v84 + 1 ;local v353=v80[v84];if (v353[1]==9) then v191[v352-1 ]={v90,v353[1190 -(1069 + 118) ]};else v191[v352-1 ]={v70,v353[6 -3 ]};end v89[ #v89 + 1 ]=v191;end v90[v92[2]]=v41(v189,v190,v71);break;end if (v188==0) then v189=v81[v92[8 -5 ]];v190=nil;v188=1;end if (v188==1) then v191={};v190=v18({},{[v7("\17\148\66\201\83\169\54","\204\78\203\43\167\55")]=function(v355,v356) local v357=0;local v358;while true do if (0==v357) then v358=v191[v356];return v358[1 + 0 ][v358[2]];end end end,[v7("\110\154\164\38\9\181\95\161\175\59","\220\49\197\202\67\126")]=function(v359,v360,v361) local v362=0;local v363;while true do if (v362==0) then v363=v191[v360];v363[1 -0 ][v363[2]]=v361;break;end end end});v188=2;end end end elseif (v93==41) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=44) then if (v93>43) then local v195=0;local v196;local v197;while true do if (v195==1) then v90[v196 + 1 ]=v197;v90[v196]=v197[v92[4]];break;end if (v195==0) then v196=v92[2];v197=v90[v92[3]];v195=1;end end else local v198=v92[2];v90[v198]=v90[v198](v21(v90,v198 + 1 ,v85));end elseif (v93<=45) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;elseif (v93>(100 -54)) then local v280=v92[1 + 1 ];do return v90[v280](v21(v90,v280 + 1 ,v92[3]));end else local v281=0;local v282;while true do if (v281==0) then v282=v92[2];do return v21(v90,v282,v85);end break;end end end elseif (v93<=52) then if (v93<=49) then if (v93==48) then v90[v92[3 -1 ]][v92[3]]=v90[v92[4 + 0 ]];else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=50) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif (v93==51) then if (v90[v92[793 -(368 + 423) ]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v283=v92[2];v90[v283](v21(v90,v283 + 1 ,v85));end elseif (v93<=54) then if (v93==53) then v90[v92[2]]=v71[v92[3]];elseif (v90[v92[2]]==v92[12 -8 ]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=55) then v90[v92[2]]=v92[21 -(10 + 8) ];elseif (v93>56) then v90[v92[2]][v92[3]]=v92[4];elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=67) then if (v93<=(238 -176)) then if (v93<=59) then if (v93==58) then v90[v92[444 -(416 + 26) ]]=v90[v92[3]]%v92[4] ;else local v211=0;local v212;while true do if (v211==0) then v212=v92[2];v90[v212]=v90[v212]();break;end end end elseif (v93<=60) then local v213=0;local v214;local v215;local v216;while true do if (v213==1) then v216=v90[v214 + 2 ];if (v216>0) then if (v215>v90[v214 + 1 ]) then v84=v92[3];else v90[v214 + 3 ]=v215;end elseif (v215<v90[v214 + 1 ]) then v84=v92[3];else v90[v214 + 3 ]=v215;end break;end if (v213==0) then v214=v92[2];v215=v90[v214];v213=1;end end elseif (v93==(194 -133)) then local v287=v92[1 + 1 ];do return v21(v90,v287,v85);end else local v288=0;local v289;local v290;local v291;local v292;while true do if (2==v288) then for v392=v289,v85 do v292=v292 + 1 ;v90[v392]=v290[v292];end break;end if (v288==0) then v289=v92[3 -1 ];v290,v291=v83(v90[v289](v90[v289 + 1 ]));v288=1;end if (1==v288) then v85=(v291 + v289) -1 ;v292=0;v288=2;end end end elseif (v93<=64) then if (v93>63) then v90[v92[2]]=v92[3];else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=65) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>66) then local v294=v92[2];local v295,v296=v83(v90[v294](v21(v90,v294 + 1 ,v85)));v85=(v296 + v294) -1 ;local v297=0;for v338=v294,v85 do local v339=0;while true do if (v339==0) then v297=v297 + 1 ;v90[v338]=v295[v297];break;end end end else v84=v92[3];end elseif (v93<=72) then if (v93<=69) then if (v93>68) then local v221=0;local v222;while true do if (v221==0) then v222=v92[2];do return v90[v222](v21(v90,v222 + 1 ,v92[3]));end break;end end else v90[v92[2]]=v90[v92[441 -(145 + 293) ]];end elseif (v93<=70) then v90[v92[2]]= #v90[v92[3]];elseif (v93==71) then local v299=0;local v300;local v301;while true do if (v299==1) then for v397=1, #v89 do local v398=v89[v397];for v414=430 -(44 + 386) , #v398 do local v415=v398[v414];local v416=v415[1];local v417=v415[2];if ((v416==v90) and (v417>=v300)) then local v427=0;while true do if (v427==0) then v301[v417]=v416[v417];v415[1]=v301;break;end end end end end break;end if (v299==0) then v300=v92[2];v301={};v299=1;end end else v90[v92[2]]={};end elseif (v93<=74) then if (v93==73) then local v226=0;local v227;while true do if (0==v226) then v227=v92[2];v90[v227](v21(v90,v227 + 1 ,v92[3]));break;end end else local v228=0;local v229;local v230;local v231;local v232;while true do if (2==v228) then for v366=v229,v85 do local v367=0;while true do if (v367==0) then v232=v232 + 1 ;v90[v366]=v230[v232];break;end end end break;end if (v228==1) then v85=(v231 + v229) -1 ;v232=0;v228=2;end if (v228==0) then v229=v92[2];v230,v231=v83(v90[v229](v90[v229 + (1487 -(998 + 488)) ]));v228=1;end end end elseif (v93<=75) then local v233=0;local v234;while true do if (v233==0) then v234=v92[2];v90[v234](v90[v234 + 1 + 0 ]);break;end end elseif (v93==76) then local v303=v92[2];local v304={};for v344=1, #v89 do local v345=v89[v344];for v368=0, #v345 do local v369=0;local v370;local v371;local v372;while true do if (v369==1) then v372=v370[2];if ((v371==v90) and (v372>=v303)) then v304[v372]=v371[v372];v370[1]=v304;end break;end if (0==v369) then v370=v345[v368];v371=v370[1];v369=1;end end end end else do return;end end v84=v84 + 1 ;break;end end end end;end return v41(v40(),{},v28)(...);end if (v29==2) then function v33() local v75=0;local v76;while true do if (v75==1) then return v76;end if (0==v75) then v76=v9(v27,v30,v30);v30=v30 + 1 ;v75=1;end end end v34=nil;function v34() local v77=0;local v78;local v79;while true do if (v77==0) then v78,v79=v9(v27,v30,v30 + (5 -3) );v30=v30 + 2 ;v77=1;end if (1==v77) then return (v79 * 256) + v78 ;end end end v29=3;end end end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--
